version: '3.8'

services:
  # LocalStack for AWS simulation
  localstack:
    image: localstack/localstack:latest
    container_name: betslip-localstack
    restart: unless-stopped
    ports:
      - "4566:4566"
      - "4571:4571"
    environment:
      - SERVICES=s3,dynamodb,sqs,lambda,secretsmanager,cloudwatch
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
      - LAMBDA_EXECUTOR=docker
      - DOCKER_HOST=unix:///var/run/docker.sock
      - HOST_TMP_FOLDER=/tmp/localstack
    volumes:
      - localstack_data:/tmp/localstack
      - /var/run/docker.sock:/var/run/docker.sock
      - ./localstack:/docker-entrypoint-initaws.d
    networks:
      - betslip-network

  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: betslip-mongodb-local
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password}
      MONGO_INITDB_DATABASE: ${MONGO_DB_NAME:-betslip_converter}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./deployment/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - betslip-network
    command: mongod --auth

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: betslip-redis-local
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - betslip-network
    command: redis-server --appendonly yes

  # Main Application with LocalStack integration
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: betslip-app-local
    restart: unless-stopped
    ports:
      - "5000:5000"
      - "9090:9090"  # Metrics port
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://admin:${MONGO_ROOT_PASSWORD:-password}@mongodb:27017/betslip_converter?authSource=admin
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ODDS_API_KEY=${ODDS_API_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - CORS_ORIGIN=${CORS_ORIGIN:-http://localhost:3000}
      - BROWSER_HEADLESS=true
      - BROWSER_TIMEOUT=30000
      - USE_PARALLEL_PROCESSING=true
      - MAX_CONCURRENT_BROWSERS=2
      - MAX_MEMORY_MB=1024
      # LocalStack AWS configuration
      - AWS_ENDPOINT_URL=http://localstack:4566
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
      - S3_BUCKET=betslip-converter-local
      - DYNAMODB_TABLE=betslip-sessions
      - SQS_QUEUE_URL=http://localstack:4566/000000000000/betslip-jobs
    depends_on:
      - mongodb
      - redis
      - localstack
    networks:
      - betslip-network
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "node", "server/health-check.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: betslip-nginx-local
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deployment/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deployment/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - app
    networks:
      - betslip-network

  # LocalStack initialization container
  localstack-init:
    image: amazon/aws-cli:latest
    container_name: betslip-localstack-init
    environment:
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ENDPOINT_URL=http://localstack:4566
    depends_on:
      - localstack
    networks:
      - betslip-network
    volumes:
      - ./localstack/init-aws.sh:/init-aws.sh
    command: sh /init-aws.sh
    restart: "no"

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  localstack_data:
    driver: local

networks:
  betslip-network:
    driver: bridge